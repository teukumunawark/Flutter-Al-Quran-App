// Mocks generated by Mockito 5.3.2 from annotations
// in al_quran_app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i16;
import 'dart:typed_data' as _i17;

import 'package:al_quran_app/common/failure.dart' as _i8;
import 'package:al_quran_app/data/datasources/quran_data_source.dart' as _i13;
import 'package:al_quran_app/data/models/detail_juz_model/detail_juz_model.dart'
    as _i4;
import 'package:al_quran_app/data/models/surah_model/detail_surah_model/detail_surah_model.dart'
    as _i3;
import 'package:al_quran_app/data/models/list_juz_models/juz_model.dart'
    as _i15;
import 'package:al_quran_app/data/models/surah_model/list_surah_models/surah_model.dart'
    as _i14;
import 'package:al_quran_app/domain/entities/juz_entities/detail_juz_entities.dart'
    as _i12;
import 'package:al_quran_app/domain/entities/surah_entities/detail_surah_entities/detail_surah_entities.dart'
    as _i11;
import 'package:al_quran_app/domain/entities/juz_entities/juz_entities.dart'
    as _i10;
import 'package:al_quran_app/domain/entities/surah_entities/list_surah_entities/surah_entities.dart'
    as _i9;
import 'package:al_quran_app/domain/repositories/quran_repository.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailSurah_1 extends _i1.SmartFake implements _i3.DetailSurah {
  _FakeDetailSurah_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailJuz_2 extends _i1.SmartFake implements _i4.DetailJuz {
  _FakeDetailJuz_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SurahRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRepository extends _i1.Mock implements _i6.SurahRepository {
  MockSurahRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.SurahEntities>>> getListSurah() =>
      (super.noSuchMethod(
        Invocation.method(
          #getListSurah,
          [],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, List<_i9.SurahEntities>>>.value(
                _FakeEither_0<_i8.Failure, List<_i9.SurahEntities>>(
          this,
          Invocation.method(
            #getListSurah,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.SurahEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i10.JuzEntities>>> getListJuz() =>
      (super.noSuchMethod(
        Invocation.method(
          #getListJuz,
          [],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, List<_i10.JuzEntities>>>.value(
                _FakeEither_0<_i8.Failure, List<_i10.JuzEntities>>(
          this,
          Invocation.method(
            #getListJuz,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i10.JuzEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i11.DetailSurahEntities>> getDetailSurah(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailSurah,
          [id],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i11.DetailSurahEntities>>.value(
                _FakeEither_0<_i8.Failure, _i11.DetailSurahEntities>(
          this,
          Invocation.method(
            #getDetailSurah,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i11.DetailSurahEntities>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i12.DetailJuzEntities>> getDetailJuz(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailJuz,
          [id],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i12.DetailJuzEntities>>.value(
                _FakeEither_0<_i8.Failure, _i12.DetailJuzEntities>(
          this,
          Invocation.method(
            #getDetailJuz,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i12.DetailJuzEntities>>);
}

/// A class which mocks [SurahRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurahRemoteDataSource extends _i1.Mock
    implements _i13.SurahRemoteDataSource {
  MockSurahRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i14.SurahModel>> readListSurah() => (super.noSuchMethod(
        Invocation.method(
          #readListSurah,
          [],
        ),
        returnValue:
            _i7.Future<List<_i14.SurahModel>>.value(<_i14.SurahModel>[]),
      ) as _i7.Future<List<_i14.SurahModel>>);
  @override
  _i7.Future<List<_i15.JuzModel>> readListJuz() => (super.noSuchMethod(
        Invocation.method(
          #readListJuz,
          [],
        ),
        returnValue: _i7.Future<List<_i15.JuzModel>>.value(<_i15.JuzModel>[]),
      ) as _i7.Future<List<_i15.JuzModel>>);
  @override
  _i7.Future<_i3.DetailSurah> readDetailSurah(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #readDetailSurah,
          [id],
        ),
        returnValue: _i7.Future<_i3.DetailSurah>.value(_FakeDetailSurah_1(
          this,
          Invocation.method(
            #readDetailSurah,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.DetailSurah>);
  @override
  _i7.Future<_i4.DetailJuz> readDetailJuz(String? id) => (super.noSuchMethod(
        Invocation.method(
          #readDetailJuz,
          [id],
        ),
        returnValue: _i7.Future<_i4.DetailJuz>.value(_FakeDetailJuz_2(
          this,
          Invocation.method(
            #readDetailJuz,
            [id],
          ),
        )),
      ) as _i7.Future<_i4.DetailJuz>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i17.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i17.Uint8List>.value(_i17.Uint8List(0)),
      ) as _i7.Future<_i17.Uint8List>);
  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i5.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
